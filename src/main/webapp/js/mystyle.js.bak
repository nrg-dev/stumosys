 function exportChart() {
	 try{
	;
        // exportAsImage() will return a base64 png encoded string
        img = PF('chart').exportAsImage();
        document.getElementById('XX:b64').value = img.src;
      
        check();
	 }catch (e) {
		
	}
 }
 
 function exportChartNew() {
	    //export image
	    $('#XX\\:output').empty().append(PF('chart').exportAsImage());
	 
	    //show the dialog
	    PF('dlg').show();
	}
 
 function check(){
	
	PF('blockUIW').show();
	test1();
 }
 
 function teachercheck(){
		PF('teacherblockUI').show();
		teacherRemote();
	 }
 
 function teachereditcheck(){
	
		PF('teacheredblockUIW').show();
		teacheredit();
	 }

 
 function studendBlk(){
		PF('studentblockUI').show();
		studentRemote();
	 }
 
 function parentdBlk(){
		PF('parentblockUI').show();
		parentRemote();
	 }
 
 function examBlk(){
		PF('examblocksUI').show();
		examtable();
	 }
 
 function classBlk(){
		PF('classblocksUI').show();
		classtable();
	 }
 
 function exupdateBlk1(){
		PF('exupdateblocksUI').show();
		examUpdates();
	 }

 function classupdateBlk(){
	 PF('classDialog').hide();
	PF('classupdblocksUI').show();
		classtableupd();
	 }
 
 function attendBlk(){
	PF('attendblocksUI').show();
		attendremote();
	 }
 
 function attendupdBlk(){
		PF('attendupdblocksUI').show();
		attendupdremote();
	 }
 
 function staffdBlk(){
	 PF('staffblockUI').show();
	 staffRemote();
 }
 function staffedBlk(){
	 PF('staffeditblockUI').show();
	 staffeditRemote();
 }
 
 function librarianBlk()
	{
	PF('librarianblockUI').show();
	librarianRemote();
	}

	$(document).ready(function() {
	try{
		 var panelMenu = PrimeFaces.widgets.sidePanelMenu;

		    // 1. On page loading collapses possible opened panels
		    panelMenu.collapseRootSubmenu(panelMenu.headers);
		    panelMenu.expandedNodes = [];   // clear the opened panels lists
		    panelMenu.headers.removeClass('ui-state-hover');
		    panelMenu.saveState();
    }catch (e) {
	
	}
	});

	function librarianEditBlk()
	{
		PF('librarianEditblockUI').show();
		librarianEditRemote();
	}
	
	function noticeblk()
	{
		PF('noticeblockUI').show();
		noticeRemote();
		
	}
	
	function noticedidtblk()
	{
		PF('noticeeditblockUI').show();
		noticeeditRemote();
		
	}

	function studendupdateBlk()
	{
		//PF('studentUpdatesUI').show();
		studentupdateRemote();
	}
	
	function studentPerformBlk()
	{
		PF('studentperformUI').show();
		studentperform();
	}	
	
	function studentPerformupdateBlk()
	{
		PF('studentperformUpdtUI').show();
		studentperformupdate();
	}
	function studentPerformupdateBlk1()
	{
		PF('studentUpdatesUI').show();
		PF('performanceEditdlg').hide();
		studentperformupdate1();
	}
	function workBlk()
	{
		PF('homeWorkBlockUI').show();
		homeworks();
		
	}

	function WorkUpdateBlk()
	{
		PF('homeWorkUpdateBlock').show();
		homeWorkUpdate();
	}
	function libBookeBlk()
	{
		PF('libraryBookblockUI').show();
		libraryBookRemote();
	}
	
	function extraclsBlk()
	{
		PF('classupdblocksUI').show();
		addexclass();
	}

	function feesBlk(){
		PF('feesPayblockUI').show();
		feesPayUpload();
	}
	
	function feesApproBlk(){
		PF('feesApprblockUI').show();
		feesApprove();
	}
	
	function feesRejecBlk(){
		PF('feesApprblockUI').show();
		feesReject();
	}
	
	function feesRegBlk(){
		PF('feesRegblockUI').show();
    	feesRegRemote();
    }
	
	function feesUpdateBlk(){
		PF('feesUpdateblockUI').show();
    	feesUpdateRemote();
    }
	
	function extraPeriodBlk()
	{
		PF('classupdblocksUI').show();
		addexPeriod();
	}
	function studentactivityBlk()
	{
		PF('studentUpdatesUI').show();
		studentactivityRemote();
	}
	
	function inputfieldChange(id) {
		var value=id.split(":")[3];
		var idValue= document.getElementById(id).value;
		document.getElementById(id).addEventListener("keyup", function(event) {
        event.preventDefault();
        if (value <15){
        		  if (event.keyCode == 39) {
        			  var i=Number(value)+1;
        			  var changedID=id.split(":")[0]+':'+id.split(":")[1]+':'+id.split(":")[2]+":"+i+":"+id.split(":")[4];
        			  document.getElementById(changedID).focus();
        		  }
        		  else if(event.keyCode == 37){
        			  var i=Number(value)-1;
        			  var changedID=id.split(":")[0]+':'+id.split(":")[1]+':'+id.split(":")[2]+":"+i+":"+id.split(":")[4];
        			  document.getElementById(changedID).focus();
        		  }
        }
        });
		if (value <15){
			if(idValue !=""){
				var i=Number(value)+1;
				var changedID=id.split(":")[0]+':'+id.split(":")[1]+':'+id.split(":")[2]+":"+i+":"+id.split(":")[4];
				document.getElementById(changedID).focus();
			}
		}
	  }
	
	function inputfieldChangeEdit(id) {
		var value=id.split(":")[4];
		var idValue= document.getElementById(id).value;
		document.getElementById(id).addEventListener("keyup", function(event) {
			event.preventDefault();
			if (value <15){
				if (event.keyCode == 39) {
					var i=Number(value)+1;
					var changedID=id.split(":")[0]+':'+id.split(":")[1]+':'+id.split(":")[2]+':'+id.split(":")[3]+":"+i+":"+id.split(":")[5];
					document.getElementById(changedID).focus();
				}
				else if(event.keyCode == 37){
					var i=Number(value)-1;
					var changedID=id.split(":")[0]+':'+id.split(":")[1]+':'+id.split(":")[2]+':'+id.split(":")[3]+":"+i+":"+id.split(":")[5];
					document.getElementById(changedID).focus();
				}
			}
		});
		if (value <15){
			if(idValue !=""){  
				var i=Number(value)+1;
				var changedID=id.split(":")[0]+':'+id.split(":")[1]+':'+id.split(":")[2]+':'+id.split(":")[3]+":"+i+":"+id.split(":")[5];
				document.getElementById(changedID).focus();
			}
	  }
	  }